<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gr.farming.member.model.MemberDAO">	
	<sql id="searchWhere">
	      <if test="searchKeyword!=null and searchKeyword!=''">
	         where ${searchCondition} like '%' || #{searchKeyword} || '%'
	      </if>
	 </sql>

	<!-- 회원가입 --> 
	<insert id="insert" parameterType="memberVo">
		<selectKey keyProperty="memberNo" resultType="int" order="BEFORE">
			select member_seq.nextval from dual
		</selectKey>
		insert into member(member_no, name, email, pwd, address1, address2, zipCode)
		values(#{memberNo}, #{name}, #{email}, #{pwd}, #{address1}, #{address2}, #{zipCode})
	</insert>
	
	<select id="duplicatedId" parameterType="string" resultType="int">
		select count(*) from member where email=#{email}
	</select>
	
	<select id="selectPwd" parameterType="string" resultType="string">
		select pwd from member
		where email=#{email}
	</select>
	
	<select id="selectByEmail" parameterType="string" resultType="memberVo">
		select * from member
		where email=#{email}
	</select>
	
	<select id="selectAll" resultType="memberVo">
		select * from
		(
			select rownum as RNUM, A.*
				from(
					select * from member
					order by member_no asc
				)A
		)
		<![CDATA[
		where RNUM>#{firstRecordIndex} 
			and RNUM<=#{firstRecordIndex}+ #{recordCountPerPage}]]>
	</select>
	
	<update id="updateMember" parameterType="memberVo">
		update member
		set name=#{name}, pwd=#{pwd}, address1=#{address1}, address2=#{address2}, zipCode=#{zipCode}, 
		fileName=#{fileName}, fileSize=#{fileSize}, originalFileName=#{originalFileName}
		where email=#{email}
	</update>
	
	<update id="delete" parameterType="memberVo">
		delete from member 
		where email=#{email}
		and pwd=#{pwd}
	</update>
	
	<update id="updatePwd" parameterType="string">
		update member
		set pwd=#{pwd}
		where email=#{email}
	</update>
	
	<select id="selectByNo" parameterType="int" resultType="memberVo">
		select * from member
		where member_no=#{memberNo}
	</select>
	
   <delete id="deleteMember" parameterType="int"> 
		delete member where member_no=#{memberNo}
	</delete>
	
	<select id="selectTotalRecord" parameterType="searchVo" resultType="int">
		select count(*) from member
		<!-- <include refid="searchWhere"></include>	 -->
	</select>
   
</mapper>


